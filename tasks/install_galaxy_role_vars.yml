---
- name: Include galaxy role
  include_role:
    name: galaxyproject.galaxy
    public: true
  vars:
    galaxy_virtualenv_command: python3 -m virtualenv
    galaxy_venv_dir: "{{ laniakea_galaxy_venv_dir }}"
    pip_virtualenv_command: /usr/bin/python3 -m virtualenv
    pip_package: python3-pip

    galaxy_create_user: "{{ laniakea_galaxy_create_user }}"
    galaxy_force_checkout: "{{ laniakea_galaxy_force_checkout }}"
    galaxy_separate_privileges: "{{ laniakea_galaxy_separate_privileges }}"
    galaxy_manage_paths: "{{ laniakea_galaxy_manage_paths }}"
    galaxy_layout: "{{ laniakea_galaxy_layout }}"
    galaxy_privsep_user: "{{ laniakea_galaxy_privsep_user }}"
    galaxy_user: "{{ laniakea_galaxy_user }}"
    galaxy_group: "{{ laniakea_galaxy_group }}"
    galaxy_root: "{{ galaxy_install_path }}"
    galaxy_mutable_config_dir: "{{ laniakea_galaxy_config_dir }}"
    galaxy_config_file: "{{ laniakea_galaxy_config_file }}"
    galaxy_commit_id: "{{ galaxy_version }}"
    galaxy_config_style: yaml

    galaxy_tusd_port: 1080
    galaxy_server_dir: "{{ laniakea_galaxy_server_dir }}"

    galaxy_manage_systemd: true
    galaxy_manage_gravity: true
    galaxy_systemd_mode: gravity

    galaxy_config:
      galaxy:
        brand: "{{ galaxy_instance_description }}"
        admin_users: "{{ GALAXY_ADMIN_EMAIL }}"
        database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
        install_database_connection: "postgresql:///galaxy_tools?host=/var/run/postgresql"
        file_path: "{{ database_path }}/files"
        new_file_path: "{{ database_path }}/tmp"
        check_migrate_tools: false
        tool_data_path: "{{ galaxy_mutable_data_dir }}/tool-data"
        tool_dependency_dir: "{{ tool_deps_path }}"
        template_cache_path: "{{ database_path }}/compiled_templates"
        citation_cache_data_dir: "{{ database_path }}/citations/data"
        citation_cache_lock_dir: "{{ database_path }}/citations/lock"
        whoosh_index_dir: "{{ database_path }}/whoosh_indexes"
        object_store_cache_path: "{{ database_path }}/object_store_cache"
        object_store_store_by: uuid
        # id_secret: "{{ vault_id_secret }}" # un—Åomment if use vault encryption
        job_working_directory: "{{ database_path }}/job_working_directory"
        cluster_file_directory: "{{ database_path }}/pbs"
        nginx_upload_store: "{{ database_path }}/tmp/nginx_upload_store"
        nginx_upload_path: "/galaxy/_upload"
        nginx_x_accel_redirect_base: "/_x_accel_redirect"
        new_user_dataset_access_role_default_private: "True"
        ftp_upload_dir: "{{ database_path }}/ftp"
        ftp_upload_site: ftp://localhost
        # SQL Performance
        database_engine_option_server_side_cursors: true
        slow_query_log_threshold: 5
        enable_per_request_sql_debugging: true
        # Automation / Ease of Use / User-facing features
        watch_job_rules: "auto"
        allow_path_paste: true
        enable_quotas: true
        require_login: "True"
        allow_user_creation: "True"
        allow_user_impersonation: "True"
        allow_user_deletion: true
        show_welcome_with_login: true
        expose_user_name: true
        expose_dataset_path: true
        expose_potentially_sensitive_job_metrics: true
        # NFS workarounds
        retry_job_output_collection: 3
        # Debugging
        cleanup_job: onsuccess
        # Tool security
        outputs_to_working_directory: true

        job_config: "{{ galaxy_job_config }}"

        # TUS
        tus_upload_store: "{{ database_path }}/tus"
        galaxy_infrastructure_url: "https://{{ inventory_hostname }}/galaxy"

        conda_prefix: "{{ laniakea_conda_prefix }}"
        conda_auto_install: true
        #add test-toolshed
        tool_sheds_config_file: "{{ laniakea_galaxy_config_dir }}/tool_sheds_conf.xml"
        #release_20.05 variables
        tool_search_index_dir: "{{ database_path }}/tool_search_index_dir"
        tool_cache_data_dir: "{{ database_path }}/tool_cache"
        tool_data_table_config_path: "{{ tool_data_table_config_with_cvmfs }}"

        galaxy_url_prefix: /galaxy

      gravity:
        process_manager: systemd
        galaxy_root: "{{ galaxy_root }}/server"
        galaxy_user: "{{ laniakea_galaxy_user.name }}"
        virtualenv: "{{ galaxy_venv_dir }}"
        app_server: gunicorn
        gunicorn:
          # listening options
          bind: "127.0.0.1:4001"
          # performance options
          workers: 2
          # Other options that will be passed to gunicorn
          extra_args: '--forwarded-allow-ips="*"'
          preload: true
        celery:
          concurrency: 2
          loglevel: DEBUG
        handlers:
          handler:
            processes: 3
            pools:
              - job-handler
              - workflow-scheduler
        tusd:
          enable: true
          tusd_path: /usr/local/sbin/tusd
          upload_dir: "{{ database_path }}/tus"
        gx_it_proxy:
          enable: "{{ enable_interactive_tools }}"
          port: "{{ default_gx_it_proxy_port }}"

    # Galaxy Job Configuration
    galaxy_job_config:
      runners:
        local_runner:
          load: galaxy.jobs.runners.local:LocalJobRunner
          workers: 4
      execution:
        default: local_env
        environments:
          local_env:
            runner: local_runner
            tmp_dir: true
      tools:
        - class: local
          environment: local_env
